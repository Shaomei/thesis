%!PS-Adobe-3.0 EPSF-3.0
%%Creator: xpdf/pdftops 3.00
%%LanguageLevel: 2
%%BoundingBox: 0 0 432 432
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  3 1 roll 2 array astore
  /setpagedevice where {
    pop 3 dict begin
      /PageSize exch def
      /ImagingBBox null def
      /Policies 1 dict dup begin /PageSize 3 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/cshow where {
  pop
  /cshow2 {
    dup {
      pop pop
      1 string dup 0 3 index put 3 index exec
    } exch cshow
    pop pop
  } def
}{
  /cshow2 {
    currentfont /FontType get 0 eq {
      0 2 2 index length 1 sub {
        2 copy get exch 1 add 2 index exch get
        2 copy exch 256 mul add
        2 string dup 0 6 5 roll put dup 1 5 4 roll put
        3 index exec
      } for
    } {
      dup {
        1 string dup 0 3 index put 3 index exec
      } forall
    } ifelse
    pop pop
  } def
} ifelse
/awcp {
  exch {
    false charpath
    5 index 5 index rmoveto
    6 index eq { 7 index 7 index rmoveto } if
  } exch cshow2
  6 {pop} repeat
} def
/Tj {
  fCol
  1 index stringwidth pdfTextMat idtransform pop
  sub 1 index length dup 0 ne { div } { pop pop 0 } ifelse
  pdfWordSpacing pdfHorizScaling mul 0 pdfTextMat dtransform 32
  4 3 roll pdfCharSpacing pdfHorizScaling mul add 0
  pdfTextMat dtransform
  6 5 roll Tj1
} def
/Tj16 {
  fCol
  2 index stringwidth pdfTextMat idtransform pop
  sub exch div
  pdfWordSpacing pdfHorizScaling mul 0 pdfTextMat dtransform 32
  4 3 roll pdfCharSpacing pdfHorizScaling mul add 0
  pdfTextMat dtransform
  6 5 roll Tj1
} def
/Tj16V {
  fCol
  2 index stringwidth pdfTextMat idtransform exch pop
  sub exch div
  0 pdfWordSpacing pdfTextMat dtransform 32
  4 3 roll pdfCharSpacing add 0 exch
  pdfTextMat dtransform
  6 5 roll Tj1
} def
/Tj1 {
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 8 2 roll
  pdfTextRender 1 and 0 eq {
    6 copy awidthshow
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    7 index 7 index moveto
    6 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    false awcp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    8 6 roll moveto
    false awcp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    8 {pop} repeat
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { pdfFontSize 0.001 mul mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { pdfFontSize 0.001 mul mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
% Level 2 image operators
/pdfImBuf 100 string def
/pdfIm {
  image
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfImM {
  fCol imagemask
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add axialCol sc
    exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
    0 360 arc h
    dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
    0 360 arc h f*
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
/F9_0 /Helvetica 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/minus/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
%%EndSetup
pdfStartPage
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
q
1 J
1 j
q
/DeviceRGB {} cs
[1 1 1] sc
0 0 432 432 re
f
Q
q
59.04 73.44 342.72 299.52 re
W
/DeviceRGB {} CS
[1 0 0] SC
1.5 w
[1.5 4.5 7.5 4.5] 0 d
1 J
1 j
10 M
71.73 88.17 m
75.47 87.55 l
79.2 88.13 l
82.93 87.87 l
86.67 87.85 l
90.4 89.42 l
94.13 89.59 l
97.87 91.02 l
101.6 92.38 l
105.33 92.08 l
109.07 92.16 l
112.8 91.49 l
116.53 91.76 l
120.27 93.13 l
124 94.95 l
127.73 96.29 l
131.47 98.61 l
135.2 103.04 l
138.93 112.62 l
142.67 138.93 l
146.4 361.87 l
150.13 339.38 l
153.87 278.57 l
157.6 238.94 l
161.33 209.07 l
165.07 186.83 l
168.8 171.63 l
172.53 160.04 l
176.27 145.68 l
180 138.29 l
183.73 133.6 l
187.47 129.56 l
191.2 121.09 l
194.93 112.99 l
198.67 108.18 l
202.4 104.42 l
206.13 102 l
209.87 99.14 l
213.6 96.83 l
217.33 96.65 l
221.07 95.59 l
224.8 95 l
228.53 96.15 l
232.27 96.22 l
236 93.65 l
239.73 93.26 l
243.47 91.54 l
247.2 91.75 l
250.93 88.85 l
254.67 90.41 l
258.4 88.95 l
262.13 88.75 l
265.87 89.02 l
269.6 89.03 l
273.33 89.88 l
277.07 89.73 l
280.8 88.89 l
284.53 88.58 l
288.27 87.37 l
292 87.36 l
295.73 86.89 l
299.47 86.28 l
303.2 86.73 l
306.93 86.37 l
310.67 86.63 l
314.4 86.74 l
318.13 87.21 l
321.87 86.71 l
325.6 86.39 l
329.33 86.71 l
333.07 86.42 l
336.8 86.11 l
340.53 85.17 l
344.27 85.71 l
348 85.37 l
351.73 85.16 l
355.47 85.04 l
359.2 85.32 l
362.93 85.88 l
366.67 85.95 l
370.4 86.26 l
374.13 85.57 l
377.87 85.9 l
381.6 85.16 l
385.33 85.02 l
389.07 84.53 l
S
Q
q
/DeviceRGB {} CS
[0 0 0] SC
0.75 w
[] 0 d
1 J
1 j
10 M
146.4 73.44 m
333.07 73.44 l
S
146.4 73.44 m
146.4 66.24 l
S
239.73 73.44 m
239.73 66.24 l
S
333.07 73.44 m
333.07 66.24 l
S
[1 0 0 1 0 0] Tm
0 0 Td
/DeviceRGB {} cs
[0 0 0] sc
[18 0 -0 18 141.4 47.52] Tm
0 0 Td
/F9_0 1 Tf
(0) 0.556 Tj
[1 0 0 1 0 0] Tm
0 0 Td
[18 0 -0 18 229.73 47.52] Tm
0 0 Td
/F9_0 1 Tf
(50) 1.112 Tj
[1 0 0 1 0 0] Tm
0 0 Td
[18 0 -0 18 318.05 47.52] Tm
0 0 Td
/F9_0 1 Tf
(100) 1.668 Tj
59.04 82.82 m
59.04 343.15 l
S
59.04 82.82 m
51.84 82.82 l
S
59.04 134.88 m
51.84 134.88 l
S
59.04 186.95 m
51.84 186.95 l
S
59.04 239.01 m
51.84 239.01 l
S
59.04 291.08 m
51.84 291.08 l
S
59.04 343.15 m
51.84 343.15 l
S
[1 0 0 1 0 0] Tm
0 0 Td
[0 18 -18 0 41.76 77.81] Tm
0 0 Td
/F9_0 1 Tf
(0) 0.556 Tj
[1 0 0 1 0 0] Tm
0 0 Td
[0 18 -18 0 41.76 124.87] Tm
0 0 Td
/F9_0 1 Tf
(10) 1.112 Tj
[1 0 0 1 0 0] Tm
0 0 Td
[0 18 -18 0 41.76 176.94] Tm
0 0 Td
/F9_0 1 Tf
(20) 1.112 Tj
[1 0 0 1 0 0] Tm
0 0 Td
[0 18 -18 0 41.76 229.01] Tm
0 0 Td
/F9_0 1 Tf
(30) 1.112 Tj
[1 0 0 1 0 0] Tm
0 0 Td
[0 18 -18 0 41.76 281.07] Tm
0 0 Td
/F9_0 1 Tf
(40) 1.112 Tj
[1 0 0 1 0 0] Tm
0 0 Td
[0 18 -18 0 41.76 333.14] Tm
0 0 Td
/F9_0 1 Tf
(50) 1.112 Tj
59.04 73.44 342.72 299.52 re
S
Q
q
[1 0 0 1 0 0] Tm
0 0 Td
/DeviceRGB {} cs
[0 0 0] sc
[18 0 -0 18 179.4 18.72] Tm
0 0 Td
/F9_0 1 Tf
(Time \(hours\)) 5.667 Tj
Q
q
59.04 73.44 342.72 299.52 re
W
/DeviceRGB {} CS
[0 0 1] SC
1.5 w
[] 0 d
1 J
1 j
10 M
71.73 100.49 m
75.47 99.38 l
79.2 101.9 l
82.93 102.19 l
86.67 103.36 l
90.4 105.36 l
94.13 106.43 l
97.87 109.09 l
101.6 112.44 l
105.33 111.22 l
109.07 112.71 l
112.8 110.51 l
116.53 110.9 l
120.27 113.03 l
124 116.37 l
127.73 119.27 l
131.47 124.85 l
135.2 126.84 l
138.93 134.72 l
142.67 161.01 l
146.4 246.8 l
150.13 200.11 l
153.87 180.56 l
157.6 170.79 l
161.33 166.19 l
165.07 165.2 l
168.8 159.94 l
172.53 158.56 l
176.27 156.2 l
180 156.12 l
183.73 158.3 l
187.47 162.44 l
191.2 166.51 l
194.93 158.92 l
198.67 151.87 l
202.4 146.65 l
206.13 145.52 l
209.87 141.79 l
213.6 140.21 l
217.33 140.31 l
221.07 141 l
224.8 142.37 l
228.53 144.42 l
232.27 147.05 l
236 150.11 l
239.73 141.55 l
243.47 138.15 l
247.2 133.91 l
250.93 133.43 l
254.67 130.89 l
258.4 131.1 l
262.13 129.31 l
265.87 130.37 l
269.6 132.53 l
273.33 133.6 l
277.07 137.48 l
280.8 140.17 l
284.53 131.43 l
288.27 128.74 l
292 126.61 l
295.73 124.01 l
299.47 123.31 l
303.2 121.58 l
306.93 123.09 l
310.67 121.66 l
314.4 124.33 l
318.13 125.34 l
321.87 129.86 l
325.6 130.21 l
329.33 127.38 l
333.07 123.9 l
336.8 120.15 l
340.53 118.94 l
344.27 117.77 l
348 119.17 l
351.73 115.98 l
355.47 116.98 l
359.2 119.43 l
362.93 122.42 l
366.67 122.97 l
370.4 125.47 l
374.13 122.43 l
377.87 117.97 l
381.6 117.23 l
385.33 115.02 l
389.07 113.89 l
S
231.46 351.36 m
263.86 351.36 l
S
/DeviceRGB {} CS
[1 0 0] SC
1.5 w
[1.5 4.5 7.5 4.5] 0 d
231.46 329.76 m
263.86 329.76 l
S
[1 0 0 1 0 0] Tm
0 0 Td
/DeviceRGB {} cs
[0 0 0] sc
[18 0 -0 18 280.06 344.9] Tm
0 0 Td
/F9_0 1 Tf
(positiv) 2.834 Tj
25 TJm
(e class) 3.112 Tj
[1 0 0 1 0 0] Tm
0 0 Td
[18 0 -0 18 280.06 323.3] Tm
0 0 Td
/F9_0 1 Tf
(negativ) 3.224 Tj
25 TJm
(e class) 3.112 Tj
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%EOF
